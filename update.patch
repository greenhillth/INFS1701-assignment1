diff --git a/README.md b/README.md
index 92ead8dd07dbbca83ab77039a8921e52b675c43f..f8e957e0c14327267fa85621380b59c0562e4307 100644
--- a/README.md
+++ b/README.md
@@ -1,34 +1,224 @@
 # University Network Topology (SvelteKit + Tailwind)
 
-This project is a **static SvelteKit web app** that visualises a sample university network topology.  
-It uses **TailwindCSS** for styling and supports **two icon sets** (Affinity SVG and Crayon PNG), stored in `static/icons/`.  
+This project is a **static SvelteKit web app** that visualises a sample university network topology.
+It uses **TailwindCSS** for styling and supports **two icon sets** (Affinity SVG and Crayon PNG), stored in `static/icons/`.
 Users can toggle between icon sets at runtime.
 
 ---
 
 ## üöÄ Features
 
 - Built with **SvelteKit** and **TailwindCSS**
-- **Trust-zone layout**: Low, DMZ, Medium, High
+- Interactive landing page that links to the live topology canvas
+- **Trust-zone layout** spanning edge, core, data centre, administration and labs
 - **Reusable components** (`Icon.svelte`, `NodeCard.svelte`)
 - **Store-driven icon toggle** (`affinity` ‚Üî `crayon`)
 - Icons served directly from `/static/icons/`
 - Ready to extend with your own SVG/PNG library (Cisco, custom Visio exports, etc.)
 
 ---
 
 ## üõ†Ô∏è Getting Started
 
 ### 1. Prerequisites
 
-- **Node.js 18.13+** or **20+**  
-  (Check: `node -v`)  
-- **npm** (Check: `npm -v`)  
-- **nvm** is recommended for switching Node versions.
+- **Node.js 18.13+** or **20+** (check with `node -v`)
+- **npm** (check with `npm -v`)
+- **nvm** is recommended for switching Node versions
 
 ### 2. Clone & install
 
 ```bash
 git clone <your-repo-url>
-cd my-sveltekit-app   # or your project dir
+cd INFS1701-assignment1
 npm install
+```
+
+### 3. Run locally
+
+```bash
+npm run dev
+# open http://localhost:5173
+```
+
+The root route (`/`) shows the landing page, while `/flowchart` renders the interactive network topology.
+
+---
+
+## üåê Deploying to GitHub Pages (with infs1701.greenhill.net.au)
+
+The project is pre-configured with `@sveltejs/adapter-static` so it builds into a static `build/` directory that GitHub Pages can serve. A `static/CNAME` file is also included so GitHub automatically applies the `infs1701.greenhill.net.au` custom domain at publish time.
+
+### 1. Prepare the static build
+
+1. Build the site locally and verify the output:
+   ```bash
+   npm run build
+   npm run preview  # optional sanity check
+   ```
+2. Commit the generated assets only when deploying (GitHub Pages will build them for you if you use Actions).
+
+### 2. Publish via GitHub Actions
+
+1. Push the repository to GitHub (e.g. `github.com/<username>/infs1701-assignment1`).
+2. Create `.github/workflows/pages.yml` with the following workflow:
+   ```yaml
+   name: Deploy static site
+
+   on:
+     push:
+       branches: [main]
+     workflow_dispatch:
+
+   permissions:
+     contents: read
+     pages: write
+     id-token: write
+
+   concurrency:
+     group: "pages"
+     cancel-in-progress: false
+
+   jobs:
+     deploy:
+       environment:
+         name: github-pages
+         url: ${{ steps.deployment.outputs.page_url }}
+       runs-on: ubuntu-latest
+
+       steps:
+         - name: Check out repository
+           uses: actions/checkout@v4
+
+         - name: Set up Node
+           uses: actions/setup-node@v4
+           with:
+             node-version: 20
+
+         - name: Install dependencies
+           run: npm ci
+
+         - name: Build static site
+           run: npm run build
+
+         - name: Upload artifact
+           uses: actions/upload-pages-artifact@v3
+           with:
+             path: ./build
+
+         - name: Deploy to GitHub Pages
+           id: deployment
+           uses: actions/deploy-pages@v4
+   ```
+3. In your repository settings, enable **GitHub Pages** and choose the **GitHub Actions** source.
+4. Trigger the workflow (push to `main` or run it manually). Pages will host the `build/` output at `https://<username>.github.io/<repo>/`.
+
+### 3. Wire up `infs1701.greenhill.net.au`
+
+1. In your DNS provider for `greenhill.net.au`, create a **CNAME record**:
+   - **Host/Name:** `infs1701`
+   - **Value:** `<username>.github.io`
+   - **TTL:** 1 hour (or your preferred value)
+2. Wait for DNS propagation (verify with `dig infs1701.greenhill.net.au +short`).
+3. In the GitHub repository **Settings ‚Üí Pages**, set the **Custom domain** to `infs1701.greenhill.net.au`. GitHub will detect the committed `CNAME` file and provision TLS automatically.
+4. Future deployments keep the custom domain because the `static/CNAME` file is bundled into every build.
+
+### 4. Share & embed the flowchart
+
+- Visit `https://infs1701.greenhill.net.au/flowchart` for the full diagram.
+- Use the **Copy share link** button in the Flowchart header to copy the canonical URL to your clipboard for embedding in other flowcharts or LMS materials.
+- The landing page lives at `https://infs1701.greenhill.net.au/` and provides a call-to-action button for students.
+
+---
+
+## üìê Layout tuning reference (`src/lib/topology/layouts/university.ts`)
+
+### Layout settings
+
+| Parameter | Effect |
+| --- | --- |
+| `settings.canvasPadding` | Sets extra whitespace around the diagram canvas (top/right/bottom/left in grid units). |
+| `settings.maxWidth` | Constrains the maximum width of the rendered layout before scaling occurs. |
+| `settings.zoneSpacing` | Controls horizontal/vertical spacing between zone containers. |
+| `settings.nodeSpacing` | Default gap between nodes placed by `stackDevices`. |
+| `settings.minNodeSize` / `maxNodeSize` | Clamp automatic scaling of node cards. |
+| `settings.minNodeScale` | Minimum scale factor applied when space is tight. |
+| `settings.linkStyle.stroke` | Colour of solid wired links. |
+| `settings.linkStyle.dashedStroke` | Colour of dashed wireless links. |
+| `settings.linkStyle.width` | Base stroke width of links. |
+| `settings.linkStyle.dashArray` | Pattern used for dashed lines. |
+| `settings.linkStyle.opacity` | Alpha applied to standard link strokes. |
+| `settings.linkStyle.glowColor` / `glowBlur` | Colour and blur radius for the outer glow behind links. |
+| `settings.routeStyle.gradientStops` | Colours used when animating highlighted traffic routes. |
+| `settings.routeStyle.animationDistance` | How far animated highlights travel along a route (in grid units). |
+| `settings.routeStyle.animationDuration` | Duration (seconds) for highlight animation loops. |
+| `settings.routeStyle.highlightWidthMultiplier` | Multiplier that thickens highlighted paths relative to the base width. |
+| `settings.routeStyle.solidDashArray` / `dashedDashArray` | Stroke patterns for animated overlays on wired vs wireless paths. |
+| `settings.routeStyle.glowColor` / `glowBlur` | Visual emphasis colour and blur for animated routes. |
+| `settings.routeStyle.fadeOutDelay` / `fadeOutDuration` | Timing controls for how quickly highlights dissipate. |
+| `nodeGap` | Derived from `nodeSpacing` and passed to stacking helpers for horizontal spacing. |
+| `rowGap` | Derived from `nodeGap` (‚âà1.4√ó) to create vertical spacing between rows. |
+
+### Zones
+
+| Zone ID | Label | Effect |
+| --- | --- | --- |
+| `edge` | Edge & Perimeter | Defines the perimeter segment and positions ISP/firewall stack near origin. |
+| `core` | Core Network & Security | Houses core routing, switching and wireless control services. |
+| `dc` | Data Centre / DMZ | Hosts distribution, DMZ switches, server clusters and storage. |
+| `admin` | Administration Building | Aggregates admin distribution, access, staff clients and printers. |
+| `labs` | Engineering Labs | Represents specialist lab distribution, access and research endpoints. |
+
+Adjust each zone‚Äôs `origin`, `padding`, `minWidth` and `minHeight` to reposition or resize its container.
+
+### Network profiles
+
+Each profile supplies tooltip/network metadata for a node. Update the IP, subnet, MAC address or notes to match your scenario.
+
+| Profile key | Device summary |
+| --- | --- |
+| `isp` | Carrier uplink gateway. |
+| `edge-modem` | Demarcation modem handing off transit to the firewall. |
+| `perimeter-fw` | Perimeter firewall northbound interface. |
+| `core-router` | Campus core router advertising interior routes. |
+| `core-switch` | Collapsed core switch providing high-speed uplinks. |
+| `wlc` | Wireless LAN controller for AP policy management. |
+| `dc-distribution` | Data centre aggregation layer. |
+| `dmz-switch` | Segregated DMZ switching for public services. |
+| `web-servers` | Public-facing web tier VIP. |
+| `app-servers` | Application middleware servers. |
+| `student-db` | Student information database cluster. |
+| `backup-storage` | Backup storage array for snapshots. |
+| `admin-distribution` | Administration distribution switch. |
+| `admin-access` | Wired access switch for admin offices. |
+| `admin-ap` | Staff wireless access point. |
+| `admin-clients` | Representative admin staff endpoints. |
+| `admin-printers` | Secure badge-release printer fleet. |
+| `labs-distribution` | Engineering labs distribution switch. |
+| `labs-access` | Access switch for engineering bench ports. |
+| `labs-ap` | Labs wireless access point. |
+| `labs-workstations` | High-performance research workstations. |
+| `labs-iot` | IoT and prototyping devices. |
+
+### Node placement helpers
+
+| Helper | Effect |
+| --- | --- |
+| `stackDevices(direction, nodes, options)` | Quickly arranges related nodes in a row (`horizontal`) or column (`vertical`) inside a zone, spaced using `nodeGap` or `rowGap`. |
+| `placeDevice(template, config)` | Places a single device at an absolute offset or relative to another node. Adjust `position` offsets to fine-tune placement. |
+
+### Links
+
+Each entry connects two nodes and can optionally set routing instructions:
+
+- `routing: 'straight'` draws a direct line between nodes.
+- `routing: 'orthogonal'` with `orientation` controls L-shaped bends.
+- `dashed: true` renders the wireless association style defined in `linkStyle.dashedStroke`.
+
+Update the `links` array to reflect new dependencies, redundant paths or wireless associations in your own topology.
+
+---
+
+## üìÑ Licensing
+
+This project is provided for educational purposes. Adapt the topology and deployment instructions to meet your institution‚Äôs policies.
diff --git a/package-lock.json b/package-lock.json
index ec2be072a3e9483b0b1958c7d1ea34d0db555c8e..5a0fd71e86e2d4b0e362de820fe5d2c7470ad466 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,39 +1,39 @@
 {
 	"name": "assignment1-site",
 	"version": "0.0.1",
 	"lockfileVersion": 3,
 	"requires": true,
 	"packages": {
 		"": {
 			"name": "assignment1-site",
 			"version": "0.0.1",
 			"dependencies": {
 				"html-to-image": "^1.11.13"
 			},
 			"devDependencies": {
-				"@sveltejs/adapter-auto": "^6.0.0",
+				"@sveltejs/adapter-static": "^3.0.5",
 				"@sveltejs/kit": "^2.22.0",
 				"@sveltejs/vite-plugin-svelte": "^6.0.0",
 				"@tailwindcss/vite": "^4.0.0",
 				"autoprefixer": "^10.4.21",
 				"postcss": "^8.5.6",
 				"prettier": "^3.4.2",
 				"prettier-plugin-svelte": "^3.3.3",
 				"prettier-plugin-tailwindcss": "^0.6.11",
 				"svelte": "^5.0.0",
 				"svelte-check": "^4.0.0",
 				"tailwindcss": "^4.1.13",
 				"typescript": "^5.0.0",
 				"vite": "^7.0.4"
 			}
 		},
 		"node_modules/@esbuild/aix-ppc64": {
 			"version": "0.25.10",
 			"resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.10.tgz",
 			"integrity": "sha512-0NFWnA+7l41irNuaSVlLfgNT12caWJVLzp5eAVhZ0z1qpxbockccEt3s+149rE64VUI3Ml2zt8Nv5JVc4QXTsw==",
 			"cpu": [
 				"ppc64"
 			],
 			"dev": true,
 			"license": "MIT",
 			"optional": true,
@@ -842,54 +842,54 @@
 			],
 			"dev": true,
 			"license": "MIT",
 			"optional": true,
 			"os": [
 				"win32"
 			]
 		},
 		"node_modules/@standard-schema/spec": {
 			"version": "1.0.0",
 			"resolved": "https://registry.npmjs.org/@standard-schema/spec/-/spec-1.0.0.tgz",
 			"integrity": "sha512-m2bOd0f2RT9k8QJx1JN85cZYyH1RqFBdlwtkSlf4tBDYLCiiZnv1fIIwacK6cqwXavOydf0NPToMQgpKq+dVlA==",
 			"dev": true,
 			"license": "MIT"
 		},
 		"node_modules/@sveltejs/acorn-typescript": {
 			"version": "1.0.5",
 			"resolved": "https://registry.npmjs.org/@sveltejs/acorn-typescript/-/acorn-typescript-1.0.5.tgz",
 			"integrity": "sha512-IwQk4yfwLdibDlrXVE04jTZYlLnwsTT2PIOQQGNLWfjavGifnk1JD1LcZjZaBTRcxZu2FfPfNLOE04DSu9lqtQ==",
 			"dev": true,
 			"license": "MIT",
 			"peerDependencies": {
 				"acorn": "^8.9.0"
 			}
 		},
-		"node_modules/@sveltejs/adapter-auto": {
-			"version": "6.1.0",
-			"resolved": "https://registry.npmjs.org/@sveltejs/adapter-auto/-/adapter-auto-6.1.0.tgz",
-			"integrity": "sha512-shOuLI5D2s+0zTv2ab5M5PqfknXqWbKi+0UwB9yLTRIdzsK1R93JOO8jNhIYSHdW+IYXIYnLniu+JZqXs7h9Wg==",
+		"node_modules/@sveltejs/adapter-static": {
+			"version": "3.0.9",
+			"resolved": "https://registry.npmjs.org/@sveltejs/adapter-static/-/adapter-static-3.0.9.tgz",
+			"integrity": "sha512-aytHXcMi7lb9ljsWUzXYQ0p5X1z9oWud2olu/EpmH7aCu4m84h7QLvb5Wp+CFirKcwoNnYvYWhyP/L8Vh1ztdw==",
 			"dev": true,
 			"license": "MIT",
 			"peerDependencies": {
 				"@sveltejs/kit": "^2.0.0"
 			}
 		},
 		"node_modules/@sveltejs/kit": {
 			"version": "2.43.5",
 			"resolved": "https://registry.npmjs.org/@sveltejs/kit/-/kit-2.43.5.tgz",
 			"integrity": "sha512-44Mm5csR4mesKx2Eyhtk8UVrLJ4c04BT2wMTfYGKJMOkUqpHP5KLL2DPV0hXUA4t4+T3ZYe0aBygd42lVYv2cA==",
 			"dev": true,
 			"license": "MIT",
 			"dependencies": {
 				"@standard-schema/spec": "^1.0.0",
 				"@sveltejs/acorn-typescript": "^1.0.5",
 				"@types/cookie": "^0.6.0",
 				"acorn": "^8.14.1",
 				"cookie": "^0.6.0",
 				"devalue": "^5.3.2",
 				"esm-env": "^1.2.2",
 				"kleur": "^4.1.5",
 				"magic-string": "^0.30.5",
 				"mrmime": "^2.0.0",
 				"sade": "^1.8.1",
 				"set-cookie-parser": "^2.6.0",
diff --git a/package.json b/package.json
index 7de9c59a66a0ee9f6c8cf7af141d344fe7557341..d66cad1ff7f33e691d1f0e09ad256ce86fbbe7c5 100644
--- a/package.json
+++ b/package.json
@@ -1,35 +1,35 @@
 {
 	"name": "assignment1-site",
 	"private": true,
 	"version": "0.0.1",
 	"type": "module",
 	"scripts": {
 		"dev": "vite dev",
 		"build": "vite build",
 		"preview": "vite preview",
 		"prepare": "svelte-kit sync || echo ''",
 		"check": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json",
 		"check:watch": "svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch",
 		"format": "prettier --write .",
 		"lint": "prettier --check ."
 	},
 	"devDependencies": {
-		"@sveltejs/adapter-auto": "^6.0.0",
+                "@sveltejs/adapter-static": "^3.0.5",
 		"@sveltejs/kit": "^2.22.0",
 		"@sveltejs/vite-plugin-svelte": "^6.0.0",
 		"@tailwindcss/vite": "^4.0.0",
 		"autoprefixer": "^10.4.21",
 		"postcss": "^8.5.6",
 		"prettier": "^3.4.2",
 		"prettier-plugin-svelte": "^3.3.3",
 		"prettier-plugin-tailwindcss": "^0.6.11",
 		"svelte": "^5.0.0",
 		"svelte-check": "^4.0.0",
 		"tailwindcss": "^4.1.13",
 		"typescript": "^5.0.0",
 		"vite": "^7.0.4"
 	},
 	"dependencies": {
 		"html-to-image": "^1.11.13"
 	}
 }
diff --git a/src/routes/+page.svelte b/src/routes/+page.svelte
index a5bd198c81b5235123deafed5df8b58955457c19..1606514b94c7e85d7d10ad4bc11c50a288e6b27a 100644
--- a/src/routes/+page.svelte
+++ b/src/routes/+page.svelte
@@ -1,368 +1,244 @@
-<script lang="ts">
-        import { fromStore } from 'svelte/store';
-        import { page } from '$app/stores';
-        import { iconSet, type IconSet } from '$lib/stores/iconSet';
-        import FlowCanvas from '$lib/topology/FlowCanvas.svelte';
-        import { universityLayout } from '$lib/topology/layouts/university';
-
-        const iconSetState = fromStore(iconSet);
-        const pageState = fromStore(page);
-        const layout = universityLayout;
-        let flowCanvasComponent: FlowCanvas | null = null;
-        let diagramFrameElement: HTMLDivElement | null = null;
-        let exporting = $state(false);
-        const isEpic = $derived(iconSetState.current === 'crayon');
-
-        $effect(() => {
-                const q = pageState.current.url.searchParams.get('icons') as IconSet | null;
-                if ((q === 'affinity' || q === 'crayon') && iconSetState.current !== q) {
-                        iconSetState.current = q;
-                }
-        });
-
-        function setMode(mode: IconSet) {
-                if (iconSetState.current !== mode) {
-                        iconSetState.current = mode;
-                }
-        }
-
-        function toggleMode() {
-                setMode(iconSetState.current === 'crayon' ? 'affinity' : 'crayon');
-        }
-
-        async function exportCanvas() {
-                if (typeof window === 'undefined') {
-                        return;
-                }
-
-                const exportElement = diagramFrameElement ?? flowCanvasComponent?.getCanvasElement?.();
-                if (!exportElement) {
-                        return;
-                }
-
-                exporting = true;
-
-                try {
-                        const { toPng } = await import('html-to-image');
-                        const dataUrl = await toPng(exportElement, {
-                                cacheBust: true,
-                                pixelRatio: window.devicePixelRatio ?? 1
-                        });
-
-                        const link = document.createElement('a');
-                        const modeLabel = iconSetState.current === 'crayon' ? 'epic' : 'standard';
-                        link.href = dataUrl;
-                        link.download = `network-topology-${modeLabel}.png`;
-                        link.click();
-                } catch (error) {
-                        console.error('Failed to export canvas', error);
-                } finally {
-                        exporting = false;
-                }
-        }
-</script>
-
-<div class="page">
-        <div class="page__inner">
-                <header class="page__header">
-                        <h1 class="page__title">University Network Topology</h1>
-
-                        <div class="control-panel">
-                                <div class="mode-switch">
-                                        <span class="mode-switch__label">Mode</span>
-                                        <button
-                                                type="button"
-                                                class={`mode-switch__toggle${isEpic ? ' mode-switch__toggle--epic' : ''}`}
-                                                role="switch"
-                                                aria-label="Mode"
-                                                aria-checked={isEpic}
-                                                onclick={toggleMode}
-                                        >
-                                                <span class="mode-switch__option mode-switch__option--standard">
-                                                        Standard
-                                                </span>
-                                                <span class="mode-switch__thumb" aria-hidden="true"></span>
-                                                <span class="mode-switch__option mode-switch__option--epic">
-                                                        epic
-                                                </span>
-                                        </button>
-                                </div>
-
-                                <button
-                                        type="button"
-                                        class="export-button"
-                                        onclick={exportCanvas}
-                                        disabled={exporting}
-                                >
-                                        {exporting ? 'Exporting‚Ä¶' : 'Export PNG'}
-                                </button>
-                        </div>
-                </header>
+<svelte:head>
+        <title>INFS1701 Networking &amp; Cybersecurity Hub</title>
+        <meta
+                name="description"
+                content="Explore INFS1701 networking and cybersecurity resources, including the interactive network topology diagram and future project showcases."
+        />
+</svelte:head>
+
+<div class="landing">
+        <div class="landing__content">
+                <p class="landing__eyebrow">Greenhill Institute of Technology</p>
+                <h1 class="landing__title">INFS1701 Networking &amp; Cybersecurity Hub</h1>
+                <p class="landing__lead">
+                        Your starting point for INFS1701 projects. Launch the interactive network topology to
+                        explore the Greenhill campus design, or keep an eye on the placeholders below as new
+                        cybersecurity artefacts come online.
+                </p>
+
+                <div class="landing__actions">
+                        <a class="landing__button" href="/flowchart">View the network topology</a>
+                        <a class="landing__link" href="/flowchart" target="_blank" rel="noreferrer">
+                                Open topology in a new tab
+                        </a>
+                </div>
         </div>
 
-        <section class="diagram">
-                <div class="diagram__inner">
-                        <div class="diagram__frame" bind:this={diagramFrameElement}>
-                                <div class="diagram__canvas">
-                                        <FlowCanvas {layout} bind:this={flowCanvasComponent} />
-                                </div>
+        <div class="landing__note">
+                <p>
+                        Tip: Once on the flowchart page you can export a PNG snapshot or copy a direct link for
+                        embedding in documentation and coursework.
+                </p>
+        </div>
 
-                                <div class="diagram__legend">
-                                        <div class="diagram__legend-item">
-                                                <span class="diagram__legend-line" aria-hidden="true"></span>
-                                                <span>Wired uplink</span>
-                                        </div>
-                                        <div class="diagram__legend-item">
-                                                <span class="diagram__legend-line diagram__legend-line--dashed" aria-hidden="true"></span>
-                                                <span>Wireless association</span>
-                                        </div>
-                                </div>
-                        </div>
+        <div class="landing__grid" aria-labelledby="projects-heading">
+                <div class="landing__grid-header">
+                        <h2 id="projects-heading">Upcoming INFS1701 Projects</h2>
+                        <p>
+                                These placeholders reserve space for future networking and cybersecurity resources
+                                such as configuration labs, incident response drills, and vulnerability reports.
+                                Swap the titles and descriptions when each artefact is ready to publish.
+                        </p>
+                </div>
+                <div class="landing__grid-items">
+                        <article class="landing__card" aria-label="Placeholder for Security Operations Playbook">
+                                <h3>Security Operations Playbook</h3>
+                                <p>
+                                        Coming soon: a guide for monitoring the simulated campus SOC with incident
+                                        response checklists and escalation paths.
+                                </p>
+                                <span class="landing__badge">Placeholder</span>
+                        </article>
+                        <article class="landing__card" aria-label="Placeholder for Network Lab Guides">
+                                <h3>Network Lab Guides</h3>
+                                <p>
+                                        Reserve this tile for step-by-step switch and router configuration exercises
+                                        that complement the topology.
+                                </p>
+                                <span class="landing__badge">Placeholder</span>
+                        </article>
+                        <article class="landing__card" aria-label="Placeholder for Cybersecurity Case Study">
+                                <h3>Cybersecurity Case Study</h3>
+                                <p>
+                                        Allocate this space to a threat modelling or penetration testing case study
+                                        to highlight defensive strategies.
+                                </p>
+                                <span class="landing__badge">Placeholder</span>
+                        </article>
                 </div>
-        </section>
-
-        <div class="page__inner">
-                <footer class="page__footer">
-                        Toggle icons above ‚Äî files are served from <code>/static/icons/‚Ä¶</code>
-                </footer>
         </div>
 </div>
 
 <style>
-        .page {
+        .landing {
                 min-height: 100vh;
-                background: linear-gradient(180deg, #0f172a 0%, #020617 60%, #01010a 100%);
-                color: #f8fafc;
-        }
-
-        .page__inner {
-                margin: 0 auto;
-                max-width: 96rem;
-                padding: 3rem 2rem;
-        }
-
-        .page__inner:last-of-type {
-                padding-top: 2rem;
-                padding-bottom: 4rem;
-        }
-
-        .page__header {
-                display: flex;
-                flex-wrap: wrap;
-                align-items: center;
-                justify-content: space-between;
-                gap: 1.5rem;
-                margin-bottom: 2rem;
-        }
-
-        .page__title {
-                font-size: 1.85rem;
-                font-weight: 600;
-                letter-spacing: -0.01em;
-        }
-
-        .control-panel {
-                display: flex;
-                flex-direction: column;
-                gap: 0.85rem;
-                width: min(16rem, 100%);
-                margin-left: auto;
-        }
-
-        .mode-switch {
-                display: flex;
-                flex-direction: column;
-                gap: 0.4rem;
-        }
-
-        .mode-switch__label {
-                font-size: 0.75rem;
-                text-transform: uppercase;
-                letter-spacing: 0.08em;
-                color: rgb(226 232 240 / 0.75);
-        }
-
-        .mode-switch__toggle {
-                position: relative;
                 display: grid;
-                grid-template-columns: repeat(2, minmax(0, 1fr));
+                gap: 2.5rem;
                 align-items: center;
-                padding: 0.4rem;
-                border-radius: 9999px;
-                border: 1px solid rgb(148 163 184 / 0.35);
-                background: rgb(15 23 42 / 0.65);
-                color: rgb(226 232 240 / 0.85);
-                font-size: 0.8rem;
-                font-weight: 500;
-                letter-spacing: 0.02em;
-                cursor: pointer;
-                transition: border-color 150ms ease, background 150ms ease, box-shadow 150ms ease;
+                justify-items: center;
+                padding: clamp(3rem, 4vw, 5rem) clamp(1.5rem, 4vw, 5rem);
+                background: radial-gradient(circle at top right, rgba(56, 189, 248, 0.1), transparent 45%),
+                        radial-gradient(circle at bottom left, rgba(34, 197, 94, 0.12), transparent 50%), #020617;
+                color: #e2e8f0;
         }
 
-        .mode-switch__toggle:hover {
-                border-color: rgb(148 163 184 / 0.55);
-                background: rgb(30 41 59 / 0.75);
+        .landing__content {
+                max-width: 48rem;
+                text-align: center;
+                display: grid;
+                gap: 1.5rem;
         }
 
-        .mode-switch__toggle:focus-visible {
-                outline: 2px solid rgb(96 165 250 / 0.8);
-                outline-offset: 2px;
+        .landing__eyebrow {
+                font-size: 0.9rem;
+                letter-spacing: 0.12em;
+                text-transform: uppercase;
+                font-weight: 600;
+                color: rgba(148, 163, 184, 0.85);
+                margin-bottom: 1rem;
         }
 
-        .mode-switch__thumb {
-                position: absolute;
-                inset: 0.25rem auto 0.25rem 0.25rem;
-                width: calc(50% - 0.5rem);
-                border-radius: 9999px;
-                background: linear-gradient(135deg, rgb(59 130 246 / 0.35), rgb(59 130 246 / 0.7));
-                box-shadow: 0 12px 22px rgb(59 130 246 / 0.35);
-                transform: translateX(0);
-                transition: transform 200ms ease;
-                z-index: 1;
+        .landing__title {
+                font-size: clamp(2rem, 5vw, 3.25rem);
+                font-weight: 700;
+                color: #f8fafc;
+                margin-bottom: 1rem;
         }
 
-        .mode-switch__toggle--epic .mode-switch__thumb {
-                transform: translateX(calc(100% + 0.5rem));
+        .landing__lead {
+                font-size: 1.1rem;
+                line-height: 1.7;
+                margin: 0 auto;
+                color: rgba(226, 232, 240, 0.88);
         }
 
-        .mode-switch__option {
-                position: relative;
-                z-index: 2;
+        .landing__actions {
                 display: flex;
-                justify-content: center;
+                flex-direction: column;
+                gap: 0.75rem;
                 align-items: center;
-                gap: 0.2rem;
-                padding: 0.15rem 0.3rem;
-                text-transform: uppercase;
-                letter-spacing: 0.08em;
-                pointer-events: auto;
         }
 
-        .mode-switch__option--standard {
-                color: rgb(226 232 240 / 0.85);
-        }
-
-        .mode-switch__option--epic {
-                color: rgb(226 232 240 / 0.68);
-        }
-
-        .mode-switch__toggle--epic .mode-switch__option--standard {
-                color: rgb(226 232 240 / 0.6);
-        }
-
-        .mode-switch__toggle--epic .mode-switch__option--epic {
-                color: rgb(244 114 182 / 0.9);
+        @media (min-width: 640px) {
+                .landing__actions {
+                        flex-direction: row;
+                }
         }
 
-        .export-button {
+        .landing__button {
                 display: inline-flex;
-                justify-content: center;
                 align-items: center;
-                gap: 0.4rem;
-                padding: 0.55rem 1.1rem;
-                border-radius: 0.9rem;
-                border: 1px solid rgb(148 163 184 / 0.35);
-                background: linear-gradient(135deg, rgb(59 130 246 / 0.18), rgb(14 116 144 / 0.28));
-                color: rgb(191 219 254 / 0.92);
-                font-size: 0.82rem;
+                justify-content: center;
+                gap: 0.5rem;
+                padding: 0.85rem 1.85rem;
+                border-radius: 999px;
+                background: linear-gradient(135deg, #38bdf8, #4ade80);
+                color: #0f172a;
                 font-weight: 600;
-                letter-spacing: 0.04em;
-                text-transform: uppercase;
-                cursor: pointer;
-                transition: transform 150ms ease, box-shadow 150ms ease, border-color 150ms ease, background 150ms ease;
-        }
-
-        .export-button:hover:not(:disabled) {
-                transform: translateY(-1px);
-                border-color: rgb(148 163 184 / 0.6);
-                background: linear-gradient(135deg, rgb(59 130 246 / 0.26), rgb(14 116 144 / 0.4));
-                box-shadow: 0 12px 25px rgb(59 130 246 / 0.25);
+                text-decoration: none;
+                box-shadow: 0 12px 30px rgba(56, 189, 248, 0.35);
+                transition: transform 0.2s ease, box-shadow 0.2s ease;
         }
 
-        .export-button:focus-visible {
-                outline: 2px solid rgb(96 165 250 / 0.8);
-                outline-offset: 2px;
+        .landing__button:hover,
+        .landing__button:focus-visible {
+                transform: translateY(-2px);
+                box-shadow: 0 18px 36px rgba(74, 222, 128, 0.35);
         }
 
-        .export-button:disabled {
-                opacity: 0.65;
-                cursor: wait;
-                box-shadow: none;
+        .landing__link {
+                color: rgba(148, 163, 184, 0.95);
+                font-weight: 500;
+                text-decoration: none;
+                border-bottom: 1px solid rgba(148, 163, 184, 0.4);
+                padding-bottom: 0.2rem;
         }
 
-        @media (max-width: 40rem) {
-                .control-panel {
-                        width: 100%;
-                }
+        .landing__link:hover,
+        .landing__link:focus-visible {
+                color: #f8fafc;
+                border-bottom-color: #f8fafc;
         }
 
-        .diagram {
-                width: 100%;
-                padding: 0 clamp(1.5rem, 5vw, 3rem);
-                margin: 0 auto 2.5rem;
+        .landing__note {
+                max-width: 40rem;
+                background: rgba(15, 23, 42, 0.75);
+                padding: 1.25rem 1.5rem;
+                border-radius: 1rem;
+                border: 1px solid rgba(148, 163, 184, 0.25);
+                text-align: center;
+                line-height: 1.6;
+                color: rgba(226, 232, 240, 0.9);
         }
 
-        .diagram__inner {
-                width: 100%;
+        .landing__grid {
+                width: min(1080px, 100%);
+                display: grid;
+                gap: 2rem;
         }
 
-        .diagram__frame {
-                position: relative;
-                border-radius: 2rem;
-                border: 1px solid rgb(148 163 184 / 0.2);
-                background: rgb(15 23 42 / 0.55);
-                box-shadow: 0 30px 60px rgb(2 6 23 / 0.65);
-                padding: 1.5rem;
+        .landing__grid-header {
+                display: grid;
+                gap: 0.75rem;
+                text-align: center;
         }
 
-        .diagram__canvas {
-                position: relative;
-                width: 100%;
-                border-radius: 1.5rem;
-                overflow: visible;
-                background: linear-gradient(140deg, rgb(30 41 59 / 0.4), rgb(15 23 42 / 0.8));
-                padding: 1.5rem;
+        .landing__grid-header h2 {
+                font-size: clamp(1.5rem, 3vw, 2.2rem);
+                color: #f8fafc;
         }
 
-        .diagram__canvas :global(.canvas) {
+        .landing__grid-header p {
                 margin: 0 auto;
+                max-width: 52ch;
+                color: rgba(226, 232, 240, 0.8);
+                line-height: 1.6;
         }
 
-        .diagram__legend {
-                display: flex;
-                gap: 2rem;
-                margin-top: 1.5rem;
-                font-size: 0.75rem;
-                color: rgb(226 232 240 / 0.8);
-                flex-wrap: wrap;
+        .landing__grid-items {
+                display: grid;
+                gap: 1.5rem;
         }
 
-        .diagram__legend-item {
-                display: inline-flex;
-                align-items: center;
-                gap: 0.6rem;
+        @media (min-width: 768px) {
+                .landing__grid-items {
+                        grid-template-columns: repeat(3, minmax(0, 1fr));
+                }
         }
 
-        .diagram__legend-line {
-                display: inline-block;
-                width: 3rem;
-                height: 0.125rem;
-                background: rgb(148 163 184 / 0.7);
+        .landing__card {
+                background: rgba(15, 23, 42, 0.65);
+                border: 1px solid rgba(148, 163, 184, 0.22);
+                border-radius: 1.25rem;
+                padding: 1.5rem;
+                display: grid;
+                gap: 0.75rem;
+                text-align: left;
+                position: relative;
+                min-height: 220px;
         }
 
-        .diagram__legend-line--dashed {
-                background: none;
-                border-bottom: 1px dashed rgb(125 211 252 / 0.85);
+        .landing__card h3 {
+                margin: 0;
+                font-size: 1.2rem;
+                color: #f1f5f9;
         }
 
-        .page__footer {
-                margin-top: 3rem;
-                text-align: center;
-                font-size: 0.7rem;
-                color: rgb(148 163 184 / 0.7);
+        .landing__card p {
+                margin: 0;
+                line-height: 1.6;
+                color: rgba(226, 232, 240, 0.85);
         }
 
-        code {
-                color: rgb(248 250 252 / 0.9);
+        .landing__badge {
+                justify-self: start;
+                padding: 0.25rem 0.75rem;
+                border-radius: 999px;
+                background: rgba(74, 222, 128, 0.18);
+                color: #4ade80;
+                font-weight: 600;
+                font-size: 0.75rem;
+                text-transform: uppercase;
+                letter-spacing: 0.08em;
         }
 </style>
diff --git a/src/routes/flowchart/+page.svelte b/src/routes/flowchart/+page.svelte
new file mode 100644
index 0000000000000000000000000000000000000000..2ca1fdc696a4bb2d81af29fdc0564cbb8bf60af7
--- /dev/null
+++ b/src/routes/flowchart/+page.svelte
@@ -0,0 +1,453 @@
+<script lang="ts">
+        import { onDestroy } from 'svelte';
+        import { fromStore } from 'svelte/store';
+        import { page } from '$app/stores';
+        import { iconSet, type IconSet } from '$lib/stores/iconSet';
+        import FlowCanvas from '$lib/topology/FlowCanvas.svelte';
+        import { universityLayout } from '$lib/topology/layouts/university';
+
+        const iconSetState = fromStore(iconSet);
+        const pageState = fromStore(page);
+        const layout = universityLayout;
+        let flowCanvasComponent: FlowCanvas | null = null;
+        let diagramFrameElement: HTMLDivElement | null = null;
+        let exporting = $state(false);
+        const isEpic = $derived(iconSetState.current === 'crayon');
+        let copyStatus = $state<'idle' | 'copied' | 'error'>('idle');
+        let copyTimeout: ReturnType<typeof setTimeout> | null = null;
+        const shareLabel = $derived(
+                copyStatus === 'copied'
+                        ? 'Link copied!'
+                        : copyStatus === 'error'
+                                  ? 'Copy failed'
+                                  : 'Copy share link'
+        );
+
+        $effect(() => {
+                const q = pageState.current.url.searchParams.get('icons') as IconSet | null;
+                if ((q === 'affinity' || q === 'crayon') && iconSetState.current !== q) {
+                        iconSetState.current = q;
+                }
+        });
+
+        onDestroy(() => {
+                if (copyTimeout) {
+                        clearTimeout(copyTimeout);
+                }
+        });
+
+        function setMode(mode: IconSet) {
+                if (iconSetState.current !== mode) {
+                        iconSetState.current = mode;
+                }
+        }
+
+        function toggleMode() {
+                setMode(iconSetState.current === 'crayon' ? 'affinity' : 'crayon');
+        }
+
+        async function exportCanvas() {
+                if (typeof window === 'undefined') {
+                        return;
+                }
+
+                const exportElement = diagramFrameElement ?? flowCanvasComponent?.getCanvasElement?.();
+                if (!exportElement) {
+                        return;
+                }
+
+                exporting = true;
+
+                try {
+                        const { toPng } = await import('html-to-image');
+                        const dataUrl = await toPng(exportElement, {
+                                cacheBust: true,
+                                pixelRatio: window.devicePixelRatio ?? 1
+                        });
+
+                        const link = document.createElement('a');
+                        const modeLabel = iconSetState.current === 'crayon' ? 'epic' : 'standard';
+                        link.href = dataUrl;
+                        link.download = `network-topology-${modeLabel}.png`;
+                        link.click();
+                } catch (error) {
+                        console.error('Failed to export canvas', error);
+                } finally {
+                        exporting = false;
+                }
+        }
+
+        async function copyShareLink() {
+                if (typeof window === 'undefined') {
+                        return;
+                }
+
+                if (copyTimeout) {
+                        clearTimeout(copyTimeout);
+                        copyTimeout = null;
+                }
+
+                try {
+                        await navigator.clipboard.writeText(window.location.href);
+                        copyStatus = 'copied';
+                } catch (error) {
+                        console.error('Failed to copy link', error);
+                        copyStatus = 'error';
+                }
+
+                copyTimeout = setTimeout(() => {
+                        copyStatus = 'idle';
+                        copyTimeout = null;
+                }, 2500);
+        }
+</script>
+
+<div class="page">
+        <div class="page__inner">
+                <header class="page__header">
+                        <h1 class="page__title">University Network Topology</h1>
+
+                        <div class="control-panel">
+                                <div class="mode-switch">
+                                        <span class="mode-switch__label">Mode</span>
+                                        <button
+                                                type="button"
+                                                class={`mode-switch__toggle${isEpic ? ' mode-switch__toggle--epic' : ''}`}
+                                                role="switch"
+                                                aria-label="Mode"
+                                                aria-checked={isEpic}
+                                                onclick={toggleMode}
+                                        >
+                                                <span class="mode-switch__option mode-switch__option--standard">
+                                                        Standard
+                                                </span>
+                                                <span class="mode-switch__thumb" aria-hidden="true"></span>
+                                                <span class="mode-switch__option mode-switch__option--epic">
+                                                        epic
+                                                </span>
+                                        </button>
+                                </div>
+
+                                <button
+                                        type="button"
+                                        class="export-button"
+                                        onclick={exportCanvas}
+                                        disabled={exporting}
+                                >
+                                        {exporting ? 'Exporting‚Ä¶' : 'Export PNG'}
+                                </button>
+                                <button
+                                        type="button"
+                                        class={`share-button${copyStatus === 'copied' ? ' share-button--success' : ''}${
+                                                copyStatus === 'error' ? ' share-button--error' : ''
+                                        }`}
+                                        onclick={copyShareLink}
+                                >
+                                        {shareLabel}
+                                </button>
+                        </div>
+                </header>
+        </div>
+
+        <section class="diagram">
+                <div class="diagram__inner">
+                        <div class="diagram__frame" bind:this={diagramFrameElement}>
+                                <div class="diagram__canvas">
+                                        <FlowCanvas {layout} bind:this={flowCanvasComponent} />
+                                </div>
+
+                                <div class="diagram__legend">
+                                        <div class="diagram__legend-item">
+                                                <span class="diagram__legend-line" aria-hidden="true"></span>
+                                                <span>Wired uplink</span>
+                                        </div>
+                                        <div class="diagram__legend-item">
+                                                <span class="diagram__legend-line diagram__legend-line--dashed" aria-hidden="true"></span>
+                                                <span>Wireless association</span>
+                                        </div>
+                                </div>
+                        </div>
+                </div>
+        </section>
+
+        <div class="page__inner">
+                <footer class="page__footer">
+                        Toggle icons above ‚Äî files are served from <code>/static/icons/‚Ä¶</code>
+                </footer>
+        </div>
+</div>
+
+<style>
+        .page {
+                min-height: 100vh;
+                background: linear-gradient(180deg, #0f172a 0%, #020617 60%, #01010a 100%);
+                color: #f8fafc;
+        }
+
+        .page__inner {
+                margin: 0 auto;
+                max-width: 96rem;
+                padding: 3rem 2rem;
+        }
+
+        .page__inner:last-of-type {
+                padding-top: 2rem;
+                padding-bottom: 4rem;
+        }
+
+        .page__header {
+                display: flex;
+                flex-wrap: wrap;
+                align-items: center;
+                justify-content: space-between;
+                gap: 1.5rem;
+                margin-bottom: 2rem;
+        }
+
+        .page__title {
+                font-size: 1.85rem;
+                font-weight: 600;
+                letter-spacing: -0.01em;
+        }
+
+        .control-panel {
+                display: flex;
+                flex-direction: column;
+                gap: 0.85rem;
+                width: min(16rem, 100%);
+                margin-left: auto;
+        }
+
+        .mode-switch {
+                display: flex;
+                flex-direction: column;
+                gap: 0.4rem;
+        }
+
+        .mode-switch__label {
+                font-size: 0.75rem;
+                text-transform: uppercase;
+                letter-spacing: 0.08em;
+                color: rgb(226 232 240 / 0.75);
+        }
+
+        .mode-switch__toggle {
+                position: relative;
+                display: grid;
+                grid-template-columns: repeat(2, minmax(0, 1fr));
+                align-items: center;
+                padding: 0.4rem;
+                border-radius: 9999px;
+                border: 1px solid rgb(148 163 184 / 0.35);
+                background: rgb(15 23 42 / 0.65);
+                color: rgb(226 232 240 / 0.85);
+                font-size: 0.8rem;
+                font-weight: 500;
+                letter-spacing: 0.02em;
+                cursor: pointer;
+                transition: border-color 150ms ease, background 150ms ease, box-shadow 150ms ease;
+        }
+
+        .mode-switch__toggle:hover {
+                border-color: rgb(148 163 184 / 0.55);
+                background: rgb(30 41 59 / 0.75);
+        }
+
+        .mode-switch__toggle:focus-visible {
+                outline: 2px solid rgb(96 165 250 / 0.8);
+                outline-offset: 2px;
+        }
+
+        .mode-switch__thumb {
+                position: absolute;
+                inset: 0.25rem auto 0.25rem 0.25rem;
+                width: calc(50% - 0.5rem);
+                border-radius: 9999px;
+                background: linear-gradient(135deg, rgb(59 130 246 / 0.35), rgb(59 130 246 / 0.7));
+                box-shadow: 0 12px 22px rgb(59 130 246 / 0.35);
+                transform: translateX(0);
+                transition: transform 200ms ease;
+                z-index: 1;
+        }
+
+        .mode-switch__toggle--epic .mode-switch__thumb {
+                transform: translateX(calc(100% + 0.5rem));
+        }
+
+        .mode-switch__option {
+                position: relative;
+                z-index: 2;
+                display: flex;
+                justify-content: center;
+                align-items: center;
+                gap: 0.2rem;
+                padding: 0.15rem 0.3rem;
+                text-transform: uppercase;
+                letter-spacing: 0.08em;
+                pointer-events: auto;
+        }
+
+        .mode-switch__option--standard {
+                color: rgb(226 232 240 / 0.85);
+        }
+
+        .mode-switch__option--epic {
+                color: rgb(226 232 240 / 0.68);
+        }
+
+        .mode-switch__toggle--epic .mode-switch__option--standard {
+                color: rgb(226 232 240 / 0.6);
+        }
+
+        .mode-switch__toggle--epic .mode-switch__option--epic {
+                color: rgb(244 114 182 / 0.9);
+        }
+
+        .export-button {
+                display: inline-flex;
+                justify-content: center;
+                align-items: center;
+                gap: 0.4rem;
+                padding: 0.55rem 1.1rem;
+                border-radius: 0.9rem;
+                border: 1px solid rgb(148 163 184 / 0.35);
+                background: linear-gradient(135deg, rgb(59 130 246 / 0.18), rgb(14 116 144 / 0.28));
+                color: rgb(191 219 254 / 0.92);
+                font-size: 0.82rem;
+                font-weight: 600;
+                letter-spacing: 0.04em;
+                text-transform: uppercase;
+                cursor: pointer;
+                transition: transform 150ms ease, box-shadow 150ms ease, border-color 150ms ease, background 150ms ease;
+        }
+
+        .export-button:hover:not(:disabled) {
+                transform: translateY(-1px);
+                border-color: rgb(148 163 184 / 0.6);
+                background: linear-gradient(135deg, rgb(59 130 246 / 0.26), rgb(14 116 144 / 0.4));
+                box-shadow: 0 12px 25px rgb(59 130 246 / 0.25);
+        }
+
+        .export-button:focus-visible {
+                outline: 2px solid rgb(96 165 250 / 0.8);
+                outline-offset: 2px;
+        }
+
+        .export-button:disabled {
+                opacity: 0.65;
+                cursor: wait;
+                box-shadow: none;
+        }
+
+        .share-button {
+                display: inline-flex;
+                justify-content: center;
+                align-items: center;
+                padding: 0.6rem 1.1rem;
+                border-radius: 0.85rem;
+                border: 1px solid rgb(96 165 250 / 0.55);
+                background: rgb(15 23 42 / 0.7);
+                color: rgb(191 219 254 / 0.95);
+                font-size: 0.8rem;
+                font-weight: 600;
+                letter-spacing: 0.02em;
+                text-transform: uppercase;
+                transition: transform 150ms ease, box-shadow 150ms ease, border-color 150ms ease, color 150ms ease;
+        }
+
+        .share-button:hover,
+        .share-button:focus-visible {
+                transform: translateY(-1px);
+                border-color: rgb(56 189 248 / 0.85);
+                color: rgb(224 242 254);
+                box-shadow: 0 10px 22px rgb(14 165 233 / 0.25);
+        }
+
+        .share-button--success {
+                border-color: rgb(74 222 128 / 0.8);
+                color: rgb(187 247 208 / 0.95);
+                box-shadow: 0 10px 22px rgb(74 222 128 / 0.25);
+        }
+
+        .share-button--error {
+                border-color: rgb(248 113 113 / 0.85);
+                color: rgb(254 202 202 / 0.95);
+                box-shadow: 0 10px 22px rgb(248 113 113 / 0.35);
+        }
+
+        @media (max-width: 40rem) {
+                .control-panel {
+                        width: 100%;
+                }
+        }
+
+        .diagram {
+                width: 100%;
+                padding: 0 clamp(1.5rem, 5vw, 3rem);
+                margin: 0 auto 2.5rem;
+        }
+
+        .diagram__inner {
+                width: 100%;
+        }
+
+        .diagram__frame {
+                position: relative;
+                border-radius: 2rem;
+                border: 1px solid rgb(148 163 184 / 0.2);
+                background: rgb(15 23 42 / 0.55);
+                box-shadow: 0 30px 60px rgb(2 6 23 / 0.65);
+                padding: 1.5rem;
+        }
+
+        .diagram__canvas {
+                position: relative;
+                width: 100%;
+                border-radius: 1.5rem;
+                overflow: visible;
+                background: linear-gradient(140deg, rgb(30 41 59 / 0.4), rgb(15 23 42 / 0.8));
+                padding: 1.5rem;
+        }
+
+        .diagram__canvas :global(.canvas) {
+                margin: 0 auto;
+        }
+
+        .diagram__legend {
+                display: flex;
+                gap: 2rem;
+                margin-top: 1.5rem;
+                font-size: 0.75rem;
+                color: rgb(226 232 240 / 0.8);
+                flex-wrap: wrap;
+        }
+
+        .diagram__legend-item {
+                display: inline-flex;
+                align-items: center;
+                gap: 0.6rem;
+        }
+
+        .diagram__legend-line {
+                display: inline-block;
+                width: 3rem;
+                height: 0.125rem;
+                background: rgb(148 163 184 / 0.7);
+        }
+
+        .diagram__legend-line--dashed {
+                background: none;
+                border-bottom: 1px dashed rgb(125 211 252 / 0.85);
+        }
+
+        .page__footer {
+                margin-top: 3rem;
+                text-align: center;
+                font-size: 0.7rem;
+                color: rgb(148 163 184 / 0.7);
+        }
+
+        code {
+                color: rgb(248 250 252 / 0.9);
+        }
+</style>
diff --git a/static/CNAME b/static/CNAME
new file mode 100644
index 0000000000000000000000000000000000000000..5d80e4c2a4a73cb8926c117a7e852f3f2af99a77
--- /dev/null
+++ b/static/CNAME
@@ -0,0 +1 @@
+infs1701.greenhill.net.au
diff --git a/svelte.config.js b/svelte.config.js
index 1295460d122f0bd1a34b530197ed691dd43c2fe0..2344cd893ba4c7c752af8b1ac73ff29c75ae32ef 100644
--- a/svelte.config.js
+++ b/svelte.config.js
@@ -1,18 +1,17 @@
-import adapter from '@sveltejs/adapter-auto';
+import adapter from '@sveltejs/adapter-static';
 import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';
 
 /** @type {import('@sveltejs/kit').Config} */
 const config = {
 	// Consult https://svelte.dev/docs/kit/integrations
 	// for more information about preprocessors
 	preprocess: vitePreprocess(),
 
 	kit: {
-		// adapter-auto only supports some environments, see https://svelte.dev/docs/kit/adapter-auto for a list.
-		// If your environment is not supported, or you settled on a specific environment, switch out the adapter.
-		// See https://svelte.dev/docs/kit/adapters for more information about adapters.
-		adapter: adapter()
-	}
+                adapter: adapter({
+                        fallback: '200.html'
+                })
+        }
 };
 
 export default config;
